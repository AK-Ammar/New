Option Explicit

Sub ReconcileAndMatch()
    On Error GoTo ErrorHandler
    
    Application.ScreenUpdating = False ' Turn off screen updating for faster processing
    
    Dim rngE As Range, rngF As Range
    Dim threshold As Double
    
    ' Set the ranges for columns E and F
    Set rngE = Range("E9:E15")
    Set rngF = Range("F9:F15")
    
    ' Get the threshold value from cell B3
    threshold = Range("B3").Value
    
    ' Reset colors in columns E and F
    ResetColors rngE, rngF
    
    ' Perform matching and highlighting
    PerformMatching rngE, rngF, threshold
    
    ' Exit the sub if there are no errors
    Exit Sub
    
ErrorHandler:
    ' Error handling code
    Debug.Print "An error occurred: " & Err.Description
    Resume Next
End Sub

Sub ResetColors(rngE As Range, rngF As Range)
    rngE.Interior.ColorIndex = xlNone ' Reset interior color for column E
    rngF.Interior.ColorIndex = xlNone ' Reset interior color for column F
End Sub

Sub PerformMatching(rngE As Range, rngF As Range, threshold As Double)
    Dim cellE As Range
    Dim cellF As Range
    
    ' Loop through each cell in column E
    For Each cellE In rngE
        ' Skip empty cells in column E
        If Not IsEmpty(cellE.Value) Then
            ' Loop through each cell in column F
            For Each cellF In rngF
                ' Skip empty cells in column F
                If Not IsEmpty(cellF.Value) Then
                    Debug.Print "Matching combination: " & cellE.Value & " + " & cellF.Value
                    ' Perform matching and highlighting
                    MatchAndHighlight cellE, cellF, threshold
                End If
            Next cellF
        End If
    Next cellE
End Sub

Sub MatchAndHighlight(cellE As Range, cellF As Range, threshold As Double)
    Dim combinations As Object
    Set combinations = CreateObject("Scripting.Dictionary")
    
    Dim result As Variant
    result = FindCombinations(cellE.Value, cellF, threshold, combinations)
    
    If Not IsEmpty(result) Then
        Dim combination As Variant
        For Each combination In result
            combination.Interior.Color = RGB(255, 255, 0) ' Yellow color
        Next combination
    End If
End Sub

Function FindCombinations(sum As Double, rng As Range, threshold As Double, combinations As Object) As Variant
    Dim cell As Range
    For Each cell In rng
        Dim newSum As Double
        newSum = sum + cell.Value
        
        If Abs(newSum - threshold) <= threshold Then
            combinations.Add cell, cell
        End If
        
        Dim remainingRange As Range
        Set remainingRange = cell.Offset(1).Resize(rng.Cells.Count - cell.Row)
        
        Dim result As Variant
        result = FindCombinations(newSum, remainingRange, threshold, combinations)
        
        If Not IsEmpty(result) Then
            FindCombinations = result
            Exit Function
        End If
    Next cell
    
    If combinations.Count > 0 Then
        FindCombinations = combinations.Keys
    Else
        FindCombinations = Empty
    End If
End Function
