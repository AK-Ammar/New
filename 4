Option Explicit

Sub ReconcileAndMatch()
    On Error GoTo ErrorHandler
    
    Dim rngE As Range, rngF As Range
    Dim cellE As Range, cellF As Range
    Dim combination As String
    Dim foundMatch As Boolean
    Dim colorIndex As Long
    Dim threshold As Double
    Dim selectedCount As Integer
    
    ' Set the ranges for columns E and F
    Set rngE = Range("E9:E15")
    Set rngF = Range("F9:F15")
    
    ' Set the initial color index
    colorIndex = 3 ' Start with color yellow (color index 3)
    
    ' Get the threshold value from cell B3
    threshold = Range("B3").Value
    
    ' Loop through each combination size
    For selectedCount = 2 To rngF.Rows.Count
        ' Loop through each cell in column E
        For Each cellE In rngE
            ' Skip empty cells in column E
            If cellE.Value <> "" Then
                ' Recursively check combinations in column F
                foundMatch = False
                FindMatchingCombinations cellE.Value, rngF, selectedCount, threshold, cellE, colorIndex, foundMatch, 0
            End If
            
            ' Increment the color index for the next combination
            If foundMatch Then colorIndex = colorIndex + 1
        Next cellE
    Next selectedCount
    
    ' Exit the sub if there are no errors
    Exit Sub
    
ErrorHandler:
    ' Error handling code
    Debug.Print "An error occurred: " & Err.Description
    Resume Next
End Sub

Sub FindMatchingCombinations(amount As Double, rng As Range, selectedCount As Integer, threshold As Double, ByRef cellE As Range, ByRef colorIndex As Long, ByRef foundMatch As Boolean, ByVal iterationCount As Integer)
    Dim rngF As Range
    Dim cellF As Range
    Dim combination As Double
    
    ' Set the range for column F
    Set rngF = rng.Resize(rng.Rows.Count - (cellE.Row - rng.Row))
    
    ' Loop through each cell in column F
    For Each cellF In rngF
        ' Skip empty cells in column F
        If cellF.Value <> "" Then
            ' Calculate the combination
            combination = cellE.Value + cellF.Value
            
            ' Check if the combination is within the threshold
            If Abs(amount - combination) <= threshold Then
                foundMatch = True
                
                ' Highlight the matching combination with a unique color
                cellE.Interior.ColorIndex = colorIndex
                cellF.Interior.ColorIndex = colorIndex
            End If
            
            ' Check for additional numbers to reach the selected count
            If selectedCount > 2 Then
                If Not foundMatch Then
                    ' Recursively call the function to find the remaining numbers
                    FindRemainingNumbers amount, rngF, selectedCount - 1, threshold, cellE, cellF, colorIndex, foundMatch, iterationCount
                End If
            End If
        End If
    Next cellF
End Sub

Sub FindRemainingNumbers(amount As Double, rng As Range, remainingCount As Integer, threshold As Double, ByRef cellE As Range, ByRef cellF As Range, ByRef colorIndex As Long, ByRef foundMatch As Boolean, ByVal iterationCount As Integer)
    Dim rngF As Range
    Dim cellG As Range
    Dim combination As Double
    
    ' Set the range for column F
    Set rngF = rng.Resize(rng.Rows.Count - (cellF.Row - rng.Row))
    
    ' Loop through each cell in column F
    For Each cellG In rngF
        ' Skip empty cells in column F
        If cellG.Value <> "" Then
            ' Calculate the combination
            combination = cellE.Value + cellF.Value + cellG.Value
            
            ' Check if the combination is within the threshold
            If Abs(amount - combination) <= threshold Then
                foundMatch = True
                
                ' Highlight the matching combination with a unique color
                cellE.Interior.ColorIndex = colorIndex
                cellF.Interior.ColorIndex = colorIndex
                cellG.Interior.ColorIndex = colorIndex
            End If
            
            ' Check for additional numbers to reach the selected count
            If remainingCount > 2 Then
                If Not foundMatch Then
                    ' Recursively call the function to find the remaining numbers
                    FindRemainingNumbers amount, rngF, remainingCount - 1, threshold, cellE, cellG, colorIndex, foundMatch, iterationCount
                End If
            End If
        End If
    Next cellG
    
    ' Check if maximum iteration count is reached
    iterationCount = iterationCount + 1
    If iterationCount >= 1000 Then
        Exit Sub ' Exit the function to prevent infinite loops
    End If
End Sub
